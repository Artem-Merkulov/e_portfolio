#!/usr/bin/env python
# coding: utf-8

# In[1]:


# Сервис, который отправляет push-уведомления об акциях в ресторанах пользователям, подписанным на эти рестораны.
# Приложение считывает данные об акциях ресторанов из Kafka, обогащает их информацией о пользователях,
# подписанных на эти рестораны.
# Далее приложение записывает обогащённые данные в базу данных Postgres, таблица 'public.subscribers_feedback' 
# для получения обратной связи от пользователей.
# А так же отправляет обогащённые данные в push-сервис через kafka для отправки push-уведомлений пользователям,
# подписанным на рестораны.

# Импорты

# Стандартные библиотеки
from time import sleep

# Модули проекта
from etl.sprint_8_project_main_function import MainPushService
    
# Запускаем сервис

    # Запускаем приложение, которое записывает информацияю о подписчиках на рестораны в 
    # БД Postgres с полем 'feedback' для изучениия обратной связи от пользователей аналитиками.
    
    # А так же отправляет в выходной топик Kafka обогащенную информацию для того, чтобы 
    # push-service присылал пользователям push-уведомления об акциях, проходящих в ресторанах 
    # на которые пользователи подписаны.
    
    # Сервис отправляет уведомления пользователям о проведении уникальной акции, только 1 раз
    # В промежуток времени от начала акции до её завершения.
    
    # Так же в БД для аналитики обратной связи приходит только одно сообщение.
    
if __name__ == "__main__":
    
    query = MainPushService.main()
             
    query.awaitTermination()
    
    while query.isActive:
             print(f"query information: runId={query.runId}, "
                   f"status is {query.status}, "
                   f"recent progress={query.recentProgress}")
    sleep(30)